from django.shortcuts import render_to_response, get_object_or_404
from django.http import HttpResponse, HttpResponseRedirect
from django.core.urlresolvers import reverse
from django.template import Context, loader, RequestContext
from polls.models import Poll, Choice
from django.utils import translation
from django.utils.translation import ugettext

# Create your views here.

def index(request):
	latest_poll_list = Poll.objects.all().order_by('-pub_date')[:5]
#	output = ', '.join([p.question for p in latest_poll_list])
#	t = loader.get_template('polls/index.html')
#	c = Context({
#		'latest_poll_list': latest_poll_list,
#	})
	return render_to_response('polls/index.html', {
								 'LANGUAGES': translation.activate('es'),
								'latest_poll_list':latest_poll_list},
								context_instance=RequestContext(request)
							)

def detail(request, poll_id):
#	try:
#		p = Poll.objects.get(pk=poll_id)
#	except:
#		raise Http404
#	return HttpResponse('polls/detail.html', {'poll':p})
	p = get_object_or_404(Poll, pk=poll_id)
	return render_to_response('polls/detail.html', {'poll': p, 'LANGUAGES': ['en', 'es'],},
								context_instance=RequestContext(request))

def results(request, poll_id):
	p = get_object_or_404(Poll, pk=poll_id)
	return render_to_response('polls/results.html', {'poll': p})

def vote(request, poll_id):
    p = get_object_or_404(Poll, pk=poll_id)
    try:
        selected_choice = p.choice_set.get(pk=request.POST['choice'])
    except (KeyError, Choice.DoesNotExist):
        # Redisplay the poll voting form.
        return render_to_response('polls/detail.html', {
            'poll': p,
            'error_message': ugettext("You didn't select a choice."),
        }, context_instance=RequestContext(request))
    else:
        selected_choice.votes += 1
        selected_choice.save()
        # Always return an HttpResponseRedirect after successfully dealing
        # with POST data. This prevents data from being posted twice if a
        # user hits the Back button.
        return HttpResponseRedirect(reverse('polls.views.results', args=(p.id,)))





